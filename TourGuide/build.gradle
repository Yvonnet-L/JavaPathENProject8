buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE")
     }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "jacoco"


bootJar {
    baseName = 'tourGuide'
   version =  '1.0.0'
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation 'au.com.dius.pact.provider:junit5spring:4.2.14'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.5.4'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.5.4'
    compile group: 'org.javamoney', name: 'moneta', version: '1.4.2'
	compile group: 'com.jsoniter', name: 'jsoniter', version: '0.9.23'


    implementation group: 'org.junit.platform', name: 'junit-platform-gradle-plugin', version: '1.2.0'
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.5.4'

    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '2.1.2.RELEASE'

    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '6.2.0.Final'




}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.4"
    reportsDir = file("$buildDir/jacoco")
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

jacocoTestCoverageVerification {
  violationRules {
    rule {
      limit {
        counter = 'LINE'
        value = 'COVEREDRATIO'
        minimum = 0.5
      }
    }
  }
}


